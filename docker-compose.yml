version: '3'
services:
  # Databaseサーバー
  # voluemsの注意 
  #　1. 構文は＜ホストのディレクトリ＞:＜コンテナのディレクトリ＞ 
  #　2. ＜ホストのディレクトリ＞のホストとは、docker-machineのこと
  #　3. ＜ホストのディレクトリ＞にVirtual-Boxの共有フォルダを指定すると、
  #　　　mongodb起動時にエラーになる。サポート外
  #　4. ホストのVolumeに前回起動時のmongodbのdbfileが残っていると、
  #　　 docker-entrypoint-initdb.dに配置した起動スクリプト(setup.js)が
  #　　 実行されず、ユーザーやコレクションが作成されない
  db:
    image: ${DB_CONTAINER_NAME}
    restart: always
    build:
      context: ./sr-db/
      dockerfile: Dockerfile
    container_name: ${DB_CONTAINER_NAME}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ADMIN_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ADMIN_USER_PASSWD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
      DB_APP_USERNAME: ${DB_APP_USER_NAME}
      DB_APP_PASSWORD: ${DB_APP_USER_PASSWD}
    volumes:
      - '${DB_DATA_PATH}:/data/db'
    ports:
      - "${DB_PORT}:${DB_PORT}"
    command: ["mongod", "--auth"]


  rep:
    image: ${REPOSITORY_CONTAINER_NAME}
    build:
      context: ./sr-repository/
      dockerfile: Dockerfile
    container_name: ${REPOSITORY_CONTAINER_NAME}
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_NAME: ${APP_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      PUBLIC_IP: ${PUBLIC_IP}
      DB_APP_USER_NAME: ${DB_APP_USER_NAME}
      DB_APP_USER_PASSWD: ${DB_APP_USER_PASSWD}
      REPOSITORY_HTTP_PROTOCOL: ${REPOSITORY_HTTP_PROTOCOL}
      REPOSITORY_HOST: ${REPOSITORY_HOST}
      REPOSITORY_PORT: ${REPOSITORY_PORT}
      REPOSITORY_DATA_PATH: ${REPOSITORY_DATA_PATH}
      FACEBOOK_CLIENT_ID: ${FACEBOOK_CLIENT_ID}
      FACEBOOK_CLIENT_SECREAT: ${FACEBOOK_CLIENT_SECREAT}
      FACEBOOK_CALLBACK_URL: ${FACEBOOK_CALLBACK_URL}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECREAT: ${GITHUB_CLIENT_SECREAT}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL}
      WEB_SERVER_HTTP_PROTOCOL: ${WEB_SERVER_HTTP_PROTOCOL}
      WEB_SERVER_HOST: ${WEB_SERVER_HOST}
      WEB_SERVER_PORT: ${WEB_SERVER_PORT}
    volumes:
      - "${REPOSITORY_DATA_PATH}:${REPOSITORY_DATA_PATH}"
    ports:
      - "${REPOSITORY_PORT}:${REPOSITORY_PORT}"
    command: [sh, -c, npm start]


  web:
    image: ${WEB_SERVER_CONTAINER_NAME}
    build:
      context: ./sr-view/
      dockerfile: Dockerfile
      args: 
        - APP_NAME=${APP_NAME}
    container_name: ${WEB_SERVER_CONTAINER_NAME}
    ports:
      - "${WEB_SERVER_PORT}:${WEB_SERVER_PORT}"
    environment:
      APP_NAME: ${APP_NAME}
      REPOSITORY_HTTP_PROTOCOL: ${REPOSITORY_HTTP_PROTOCOL}
      REPOSITORY_HOST: ${REPOSITORY_HOST}
      REPOSITORY_PORT: ${REPOSITORY_PORT}
      WEB_SERVER_PORT: ${WEB_SERVER_PORT}
    command: /bin/bash -c "envsubst '$$APP_NAME$$REPOSITORY_HTTP_PROTOCOL$$REPOSITORY_HOST$$REPOSITORY_PORT$$WEB_SERVER_PORT' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

      